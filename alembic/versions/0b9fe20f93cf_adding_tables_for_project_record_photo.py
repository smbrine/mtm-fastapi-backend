"""Adding tables for Project, Record, Photo

Revision ID: 0b9fe20f93cf
Revises: 5ac6c734096b
Create Date: 2024-01-08 00:17:42.397210

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0b9fe20f93cf"
down_revision: Union[str, None] = "5ac6c734096b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("owner_id", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "records",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("project_id", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "photos",
        sa.Column("object", sa.LargeBinary(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("date_taken", sa.DateTime(), nullable=True),
        sa.Column("record_id", sa.String(), nullable=True),
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["record_id"],
            ["records.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("object"),
    )
    op.add_column("users", sa.Column("first_name", sa.String(), nullable=True))
    op.add_column("users", sa.Column("username", sa.String(), nullable=False))
    op.add_column("users", sa.Column("password", sa.String(), nullable=True))
    op.add_column("users", sa.Column("is_active", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("is_superuser", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.drop_column("users", "full_name")
    op.drop_column("users", "email")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "users",
        sa.Column("full_name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.drop_column("users", "created_at")
    op.drop_column("users", "is_superuser")
    op.drop_column("users", "is_active")
    op.drop_column("users", "password")
    op.drop_column("users", "username")
    op.drop_column("users", "first_name")
    op.drop_table("photos")
    op.drop_table("records")
    op.drop_table("projects")
    # ### end Alembic commands ###
